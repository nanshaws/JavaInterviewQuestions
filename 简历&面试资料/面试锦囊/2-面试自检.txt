1、简历打磨
	1）、专业技能：一定要保证自己能说出来。
	2）、项目：时间清晰、顺序合理，你负责的功能至少要有5个，否则太少，撑不起来。

2、逐字稿打磨（一定要【口语化】，不要【书面化】）
	1）、自我介绍：你是谁？来自哪？毕业于什么学校(学校还不错的话)从事后端java几年了？之前几年在哪个城市？干过哪些类型项目？
	    描述你对技术的态度，整个过程要流畅！阳光！自信！这个阶段的意义是展示你自己的沟通表达能力，树立第一良好印象

	2）、项目介绍：要结合你项目的类型，带着专业术语较为专业的去描述你的项目，拒绝空和模糊的描述，必须要让面试官感受到你专业，通过你的描述，面试官要能清晰知道以下几方面：
	    1、这个项目是做什么的，市场定位是什么？
	    2、用户群体是什么？
	    3、分为哪几端？每一端都是谁用的？可以做什么？
	    4、都用到了哪些技术？
		这个阶段的意义上是让面试官相信，这个项目你很熟悉，做过的可能性很大，描述的比较专业
					   
	3）、你所负责功能模块（参考《xxxx.txt》）
		1、介绍项目的访问流程（介绍一次即可）
		2、介绍某一个功能模块的核心逻辑，其中要携带技术点
		3、进行技术点补充说明
		这个阶段的意义是：让面试官知道你确实做过这个项目，而且技术还不错
		
	4）、开发过程中遇到的问题？怎么解决的？有没有什么亮点？可以结合以下几点去说：  
		1、巧妙设计（技术方案、设计模式）
		2、事务失效、锁失效
		3、sql调优
		4、ttl + 死信队列导致延迟消息阻塞
		5、aop切面顺序导致的并发问题，如：spring事务+synchronized导致的并发问题
			public void test(){
				synchronized (this) {
					add88MpUserToDB()
				}
			}
			
		    begin
			public String add88MpUserToDB() {
					List<MpUser> users = this.mpUserMapper.selectList(Wrappers.<MpUser>lambdaQuery().eq(MpUser::getUserName, "测试用户88"));
					if (CollectionUtil.isEmpty(users)) {
						MpUser user = getMpUser(88);
						user.setUserName("测试用户" + 88);
						this.mpUserMapper.insert(user);
						return "添加用户88成功";
					}
				}
				//释放锁
				return "数据库已存在88用户，无需添加";
			}
			commit

		5、熔断降级失效（服务方已经处理过异常）
		6、线上问题排查
		这个阶段的意义是：进一步凸显你的技术能力，让面试官拍板，要的就是你了
		
	5）、弄清楚这两点：
		1、你的项目，或者说你负责的模块涉及的【表结构】是什么样的？（几张表？做什么的？哪些字段？你设计表的原则？）
		2、你的项目，或者说你负责的模块涉及的【微服务】是什么样的？
		这两点不搞清楚，很容易挂掉

3、面试题（是一把衡量诸多面试者的尺子，这个的重要性【不言而喻】）
	一定要保证至少80%以上的面试题没啥问题，绝对不能一问三不知。
	
4、场景题